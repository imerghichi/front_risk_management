{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport fetchApi from \"../../../common/networking\";\nimport { portfolioListActions, PORTFOLIO_LIST_ACTION_TYPES } from './actions';\nexport function* getPortfolioListSaga() {\n  try {\n    const response = yield call(fetchApi, \"/portfolio\");\n    yield put(portfolioListActions.getPortfolioListSuccess(response));\n  } catch (e) {\n    yield put(portfolioListActions.getPortfolioListError(e));\n  }\n}\n\nfunction* watchPortfolioListSaga() {\n  yield all([takeLatest(PORTFOLIO_LIST_ACTION_TYPES.GET_PORTFOLIO_LIST, getPortfolioListSaga)]);\n}\n\nexport default watchPortfolioListSaga;","map":{"version":3,"sources":["/home/taaha/Serious_project/Pfa/code/test/Front-rsk-management/front_risk_management/src/containers/PortfolioListContainer/redux/saga.js"],"names":["all","call","put","takeLatest","fetchApi","portfolioListActions","PORTFOLIO_LIST_ACTION_TYPES","getPortfolioListSaga","response","getPortfolioListSuccess","e","getPortfolioListError","watchPortfolioListSaga","GET_PORTFOLIO_LIST"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,oBAAT,EAA+BC,2BAA/B,QAAkE,WAAlE;AAGA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACG,QAAD,EAAW,YAAX,CAA3B;AACA,UAAMF,GAAG,CAACG,oBAAoB,CAACI,uBAArB,CAA6CD,QAA7C,CAAD,CAAT;AACH,GAHD,CAGE,OAAOE,CAAP,EAAU;AACR,UAAMR,GAAG,CAACG,oBAAoB,CAACM,qBAArB,CAA2CD,CAA3C,CAAD,CAAT;AACH;AACJ;;AAED,UAAUE,sBAAV,GAAmC;AAC/B,QAAMZ,GAAG,CAAC,CACNG,UAAU,CAACG,2BAA2B,CAACO,kBAA7B,EAAiDN,oBAAjD,CADJ,CAAD,CAAT;AAGH;;AAED,eAAeK,sBAAf","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport fetchApi from \"../../../common/networking\";\nimport { portfolioListActions, PORTFOLIO_LIST_ACTION_TYPES } from './actions';\n\n\nexport function* getPortfolioListSaga() {\n    try {\n        const response = yield call(fetchApi, \"/portfolio\");\n        yield put(portfolioListActions.getPortfolioListSuccess(response));\n    } catch (e) {\n        yield put(portfolioListActions.getPortfolioListError(e));\n    }\n}\n\nfunction* watchPortfolioListSaga() {\n    yield all([\n        takeLatest(PORTFOLIO_LIST_ACTION_TYPES.GET_PORTFOLIO_LIST, getPortfolioListSaga)\n    ]);\n}\n\nexport default watchPortfolioListSaga;"]},"metadata":{},"sourceType":"module"}