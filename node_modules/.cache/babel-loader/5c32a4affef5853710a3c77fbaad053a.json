{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport fetchApi from \"../../../common/networking\";\nimport { activityListActions, ACTIVITY_LIST_ACTION_TYPES } from './actions';\nexport function* getActivityListSaga() {\n  try {\n    const response = yield call(fetchApi, \"/activity\");\n    yield put(activityListActions.getActivityListSuccess(response));\n  } catch (e) {\n    yield put(activityListActions.getActivityListError(e));\n  }\n}\n\nfunction* watchActivityListSaga() {\n  yield all([takeLatest(ACTIVITY_LIST_ACTION_TYPES.GET_ACTIVITY_LIST, getActivityListSaga)]);\n}\n\nexport default watchActivityListSaga;","map":{"version":3,"sources":["/home/taaha/Serious_project/Pfa/code/test/Front-rsk-management/front_risk_management/src/containers/ActivityList Container/redux/saga.js"],"names":["all","call","put","takeLatest","fetchApi","activityListActions","ACTIVITY_LIST_ACTION_TYPES","getActivityListSaga","response","getActivityListSuccess","e","getActivityListError","watchActivityListSaga","GET_ACTIVITY_LIST"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,mBAAT,EAA8BC,0BAA9B,QAAgE,WAAhE;AAGA,OAAO,UAAUC,mBAAV,GAAgC;AACnC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACG,QAAD,EAAW,WAAX,CAA3B;AACA,UAAMF,GAAG,CAACG,mBAAmB,CAACI,sBAApB,CAA2CD,QAA3C,CAAD,CAAT;AACH,GAHD,CAGE,OAAOE,CAAP,EAAU;AACR,UAAMR,GAAG,CAACG,mBAAmB,CAACM,oBAApB,CAAyCD,CAAzC,CAAD,CAAT;AACH;AACJ;;AAED,UAAUE,qBAAV,GAAkC;AAC9B,QAAMZ,GAAG,CAAC,CACNG,UAAU,CAACG,0BAA0B,CAACO,iBAA5B,EAA+CN,mBAA/C,CADJ,CAAD,CAAT;AAGH;;AAED,eAAeK,qBAAf","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport fetchApi from \"../../../common/networking\";\nimport { activityListActions, ACTIVITY_LIST_ACTION_TYPES } from './actions';\n\n\nexport function* getActivityListSaga() {\n    try {\n        const response = yield call(fetchApi, \"/activity\");\n        yield put(activityListActions.getActivityListSuccess(response));\n    } catch (e) {\n        yield put(activityListActions.getActivityListError(e));\n    }\n}\n\nfunction* watchActivityListSaga() {\n    yield all([\n        takeLatest(ACTIVITY_LIST_ACTION_TYPES.GET_ACTIVITY_LIST, getActivityListSaga)\n    ]);\n}\n\nexport default watchActivityListSaga;"]},"metadata":{},"sourceType":"module"}