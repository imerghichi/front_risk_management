{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { RISK_LIST_ACTION_TYPES, riskListActions } from \"./actions\";\nimport fetchApi from \"../../../common/networking\";\nexport function* getRiskListSaga() {\n  try {\n    const response = yield call(fetchApi, \"/risk\");\n    yield put(riskListActions.getRiskListSuccess(response));\n  } catch (e) {\n    yield put(riskListActions.getRiskListError(e));\n  }\n}\n\nfunction* watchRiskListSaga() {\n  yield all([takeLatest(RISK_LIST_ACTION_TYPES.GET_RISK_LIST, getRiskListSaga)]);\n}\n\nexport default watchRiskListSaga;","map":{"version":3,"sources":["/home/taaha/Serious_project/Pfa/code/test/Front-rsk-management/front_risk_management/src/containers/RiskListContainer/redux/saga.js"],"names":["all","call","put","takeLatest","RISK_LIST_ACTION_TYPES","riskListActions","fetchApi","getRiskListSaga","response","getRiskListSuccess","e","getRiskListError","watchRiskListSaga","GET_RISK_LIST"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAAQC,sBAAR,EAAgCC,eAAhC,QAAsD,WAAtD;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAO,UAAUC,eAAV,GAA4B;AAC/B,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACK,QAAD,EAAW,OAAX,CAA3B;AACA,UAAMJ,GAAG,CAACG,eAAe,CAACI,kBAAhB,CAAmCD,QAAnC,CAAD,CAAT;AACH,GAHD,CAGE,OAAOE,CAAP,EAAU;AACR,UAAMR,GAAG,CAACG,eAAe,CAACM,gBAAhB,CAAiCD,CAAjC,CAAD,CAAT;AACH;AACJ;;AAED,UAAUE,iBAAV,GAA8B;AAC1B,QAAMZ,GAAG,CAAC,CACNG,UAAU,CAACC,sBAAsB,CAACS,aAAxB,EAAuCN,eAAvC,CADJ,CAAD,CAAT;AAGH;;AAED,eAAeK,iBAAf","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport {RISK_LIST_ACTION_TYPES, riskListActions} from \"./actions\";\nimport fetchApi from \"../../../common/networking\";\n\nexport function* getRiskListSaga() {\n    try {\n        const response = yield call(fetchApi, \"/risk\");\n        yield put(riskListActions.getRiskListSuccess(response));\n    } catch (e) {\n        yield put(riskListActions.getRiskListError(e));\n    }\n}\n\nfunction* watchRiskListSaga() {\n    yield all([\n        takeLatest(RISK_LIST_ACTION_TYPES.GET_RISK_LIST, getRiskListSaga)\n    ]);\n}\n\nexport default watchRiskListSaga;\n"]},"metadata":{},"sourceType":"module"}