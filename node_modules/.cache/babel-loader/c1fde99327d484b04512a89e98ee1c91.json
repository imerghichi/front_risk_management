{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport fetchApi from \"../../../common/networking\";\nimport { projectListActions, PROJECT_LIST_ACTION_TYPES } from './actions';\nexport function* getProjectListSaga() {\n  try {\n    const response = yield call(fetchApi, \"/project\");\n    yield put(projectListActions.getProjectListSuccess(response));\n  } catch (e) {\n    yield put(projectListActions.getProjectListError(e));\n  }\n}\n\nfunction* watchProjectListSaga() {\n  yield all([takeLatest(PROJECT_LIST_ACTION_TYPES.GET_PROJECT_LIST, getProjectListSaga)]);\n}\n\nexport default watchProjectListSaga;","map":{"version":3,"sources":["/home/taaha/Serious_project/Pfa/code/test/Front-rsk-management/front_risk_management/src/containers/ProjectListContainer/redux/saga.js"],"names":["all","call","put","takeLatest","fetchApi","projectListActions","PROJECT_LIST_ACTION_TYPES","getProjectListSaga","response","getProjectListSuccess","e","getProjectListError","watchProjectListSaga","GET_PROJECT_LIST"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,kBAAT,EAA6BC,yBAA7B,QAA8D,WAA9D;AAGA,OAAO,UAAUC,kBAAV,GAA+B;AAClC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACG,QAAD,EAAW,UAAX,CAA3B;AACA,UAAMF,GAAG,CAACG,kBAAkB,CAACI,qBAAnB,CAAyCD,QAAzC,CAAD,CAAT;AACH,GAHD,CAGE,OAAOE,CAAP,EAAU;AACR,UAAMR,GAAG,CAACG,kBAAkB,CAACM,mBAAnB,CAAuCD,CAAvC,CAAD,CAAT;AACH;AACJ;;AAED,UAAUE,oBAAV,GAAiC;AAC7B,QAAMZ,GAAG,CAAC,CACNG,UAAU,CAACG,yBAAyB,CAACO,gBAA3B,EAA6CN,kBAA7C,CADJ,CAAD,CAAT;AAGH;;AAED,eAAeK,oBAAf","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport fetchApi from \"../../../common/networking\";\nimport { projectListActions, PROJECT_LIST_ACTION_TYPES } from './actions';\n\n\nexport function* getProjectListSaga() {\n    try {\n        const response = yield call(fetchApi, \"/project\");\n        yield put(projectListActions.getProjectListSuccess(response));\n    } catch (e) {\n        yield put(projectListActions.getProjectListError(e));\n    }\n}\n\nfunction* watchProjectListSaga() {\n    yield all([\n        takeLatest(PROJECT_LIST_ACTION_TYPES.GET_PROJECT_LIST, getProjectListSaga)\n    ]);\n}\n\nexport default watchProjectListSaga;"]},"metadata":{},"sourceType":"module"}